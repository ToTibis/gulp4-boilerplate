@import 'utilites/rem';
@import 'utilites/variables';
@import 'utilites/media-queries';
@import 'utilites/mixins';
@import 'node_modules/bootstrap/scss/vendor/rfs';

/* Global styles start*/
* {
  outline: none;
}
html,
body {
  height: 100%;
}
ul, ol, li {
  margin: 0;
  padding: 0;
  list-style: none;
}
button {
  border: none;
  padding: 0;
  margin: 0;
  background-color: transparent;
  cursor: pointer;
  &[type="button"], &[type="submit"] {
    &:focus {
      outline: none;
    }
  }
}
a {
  color: inherit;
}
input[type='number'] {
  -moz-appearance: textfield;
  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
}
input, textarea {
  &:focus {
    outline: none;
  }
}
svg {
  max-width: 100%;
  max-height: 100%;
  stroke-width: 0;
  fill: currentColor;
}
img {
  max-width: 100%;
}
/* Global styles end*/

.page {
	&-wrapper {
		display: flex;
		flex-direction: column;
		min-height: 100%;
		overflow: hidden;
		.footer {
			flex: 0 0 auto;
		}
	}
	&-content {
		flex: 1 0 auto;
	}
}

.page__modal {
	&.small {
		.page__modal-container {
			width: 500px;
		}
	}
	&-container {
		padding: $spacer $spacer * 2.5;
	}
	&-close {
		margin-right: -$spacer * 1.5;
	}
}
.presentation-wrapper {
	@include background('../img/background.jpg');
	color: map-get($colors, white);
	@include forIE {
		.row {
			width: 100%;
		}
	}
	.page {
		&-wrapper {
			min-height: 110vh;
		}
		&-content {
			display: flex;
			flex-direction: column;
		}
	}
	main {
		display: flex;
		flex-direction: column;
		flex: 1 0 auto;
		justify-content: center;
	}
	.header, .footer {
		padding-top: $spacer;
		padding-bottom: $spacer;
	}
	.header {
		nav {
			a {
				@include transition;
				font-weight: bold;
				margin-right: $spacer;
				&:hover {
					color: get($colors, success);
				}
			}
		}
	}
	.list {
		@include font-size(22);

		padding-top: $spacer / 2;
		padding-bottom: $spacer / 2;
	}
	h1 {
		@include font-size(32)
	}
	h2 {
		@include font-size(28)
	}
	.github-link {
		@include transition;
		@include animation('5s linear infinite jump');
		display: block;
		color: get($colors, info);
		@include mediaToUp($lg) {
			max-width: rem(200px);
		}
		@include mediaToDown($lg) {
			max-width: rem(120px);
			margin: 0 auto;
		}
		&:hover {
			color: get($colors, white);
			animation-play-state: paused;
		}
	}
	.button {
		padding: $spacer;
		display: block;
		color: inherit;
		border: $border-width solid get($colors, white);
		border-radius: $spacer;
		width: 100%;
	}
}
@include keyframes(jump) {
	0% {
		transform: translateY(0);
	}
	25% {
		transform: translateY(10%);
	}
	50% {
		transform: translateY(0);
	}
	75% {
		transform: translateY(-10%);
	}
	100% {
		transform: translateY(0);
	}
}




